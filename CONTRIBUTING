# How to contribute

Anyone is welcome to submit recommended changes to the website.  There are a 
few guidelines that we need contributors to follow so that we can have a chance 
of keeping on top of things.

## New Content vs Fixes

If you see a minor bug that needs fixing, feel free to submit it as a pull 
request (the development team can create a branch on the repository, contributors 
can submit a pull request from a fork).

If you would like to add new content to the site, please start with an issue 
so we can discuss the appropriateness and placement of the content before 
you commit work to creating it.

## Getting Started

* Make sure you have a [GitHub account](https://github.com/signup/free)
* Fork the repository on GitHub (for contributors)

## Making Changes

* Create a topic branch from where you want to base your work.
  * This is usually the master branch.
  * Only target release branches if you are certain your fix must be on that
    branch.
  * To quickly create a topic branch based on master; `git checkout -b
    fix/master/my_contribution master`. Please avoid working directly on the
    `master` branch.
* Make commits of logical units.
* Check for unnecessary whitespace with `git diff --check` before committing.
* Make sure your commit messages are in the proper format.

````
    Make the example in CONTRIBUTING imperative and concrete

    Without this patch applied the example commit message in the CONTRIBUTING
    document is not a concrete example.  This is a problem because the
    contributor is left to imagine what the commit message should look like
    based on a description rather than an example.  This patch fixes the
    problem by making the example concrete and imperative.

    The first line is a real life imperative statement with a ticket number
    from our issue tracker.  The body describes the behavior without the patch,
    why this is a problem, and how the patch fixes the problem when applied.
````

## Submitting Changes

* Push your changes to a topic branch in your fork of the repository (contributors) 
or on the organization's repository (development team).
* Submit a pull request to the repository in the tx041cap organization.
* The development team and/or administrator looks at Pull Requests on a regular basis.

# Additional Resources

* [General GitHub documentation](https://help.github.com/)
* [GitHub pull request documentation](https://help.github.com/articles/creating-a-pull-request/)
